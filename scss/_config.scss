///////////////////////////////////////////////////////////////////////////////
//
// Brugge variables
//
// -Required
// -General
// -Layout
// -Fonts
// -Colors
// -Icons
// -Helpers
//
///////////////////////////////////////////////////////////////////////////////





///////////////////////////////////////////////////////////////////////////////
//
//									Required
//
///////////////////////////////////////////////////////////////////////////////

$baseFontsize:						16;
$base-font-size: 					$baseFontsize / 16 * 100%;
$em-base: 							$baseFontsize;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, em-calc(#)
// Just enter the number, no need to mention "px"
@function em-calc($values, $base-value: $em-base) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

//Retaining this for backward compatability

@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function rem-calc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }





///////////////////////////////////////////////////////////////////////////////
//
//									General
//
///////////////////////////////////////////////////////////////////////////////

$bodyBg: #e7e7e7;





///////////////////////////////////////////////////////////////////////////////
//
//									Layout
//
///////////////////////////////////////////////////////////////////////////////

$mainWrapperMaxWidth: 1000px;
$mainColumnMaxWidth: 720px;
$subColumnMaxWidth: 280px;
$headerHeight: 80px;
$menuHeight: 40px;
$innerPadding: 10px;				// blocks' padding

$headerDropdownTitleWidth: 180px;   // #winkelkarTitle, #verlanglijstTitle width
$headerDropdownWidth: 270px;        // #winkelkar, #verlanglijst dropdown width
$headerDropdownHeight: auto;        // #winkelkar, #verlanglijst dropdown height





///////////////////////////////////////////////////////////////////////////////
//
//									Fonts
//
///////////////////////////////////////////////////////////////////////////////

@font-face {
    font-family: 'avenir_lt_pro45_book';
    src: url('../fonts/linotype_-_avenirltpro-book-webfont.eot');
    src: url('../fonts/linotype_-_avenirltpro-book-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/linotype_-_avenirltpro-book-webfont.woff') format('woff'),
         url('../fonts/linotype_-_avenirltpro-book-webfont.ttf') format('truetype'),
         url('../fonts/linotype_-_avenirltpro-book-webfont.svg#avenir_lt_pro45_book') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'avenir_lt_pro55_roman';
    src: url('../fonts/linotype_-_avenirltpro-roman-webfont.eot');
    src: url('../fonts/linotype_-_avenirltpro-roman-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/linotype_-_avenirltpro-roman-webfont.woff') format('woff'),
         url('../fonts/linotype_-_avenirltpro-roman-webfont.ttf') format('truetype'),
         url('../fonts/linotype_-_avenirltpro-roman-webfont.svg#avenir_lt_pro55_roman') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'avenir_lt_pro85_heavy';
    src: url('../fonts/linotype_-_avenirltpro-heavy-webfont.eot');
    src: url('../fonts/linotype_-_avenirltpro-heavy-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/linotype_-_avenirltpro-heavy-webfont.woff') format('woff'),
         url('../fonts/linotype_-_avenirltpro-heavy-webfont.ttf') format('truetype'),
         url('../fonts/linotype_-_avenirltpro-heavy-webfont.svg#avenir_lt_pro85_heavy') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'avenir_lt_pro65_medium';
    src: url('../fonts/linotype_-_avenirltpro-medium-webfont.eot');
    src: url('../fonts/linotype_-_avenirltpro-medium-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/linotype_-_avenirltpro-medium-webfont.woff') format('woff'),
         url('../fonts/linotype_-_avenirltpro-medium-webfont.ttf') format('truetype'),
         url('../fonts/linotype_-_avenirltpro-medium-webfont.svg#avenir_lt_pro65_medium') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'avenir_lt_pro95_black';
    src: url('../fonts/linotype_-_avenirltpro-black-webfont.eot');
    src: url('../fonts/linotype_-_avenirltpro-black-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/linotype_-_avenirltpro-black-webfont.woff') format('woff'),
         url('../fonts/linotype_-_avenirltpro-black-webfont.ttf') format('truetype'),
         url('../fonts/linotype_-_avenirltpro-black-webfont.svg#avenir_lt_pro95_black') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'century_schoolbook_proregular';
    src: url('../fonts/monotype__-_centuryschoolbookpro-webfont.eot');
    src: url('../fonts/monotype__-_centuryschoolbookpro-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/monotype__-_centuryschoolbookpro-webfont.woff') format('woff'),
         url('../fonts/monotype__-_centuryschoolbookpro-webfont.ttf') format('truetype'),
         url('../fonts/monotype__-_centuryschoolbookpro-webfont.svg#century_schoolbook_proregular') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'century_schoolbook_probold';
    src: url('../fonts/monotype__-_centuryschoolbookpro-bold-webfont.eot');
    src: url('../fonts/monotype__-_centuryschoolbookpro-bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/monotype__-_centuryschoolbookpro-bold-webfont.woff') format('woff'),
         url('../fonts/monotype__-_centuryschoolbookpro-bold-webfont.ttf') format('truetype'),
         url('../fonts/monotype__-_centuryschoolbookpro-bold-webfont.svg#century_schoolbook_probold') format('svg');
    font-weight: normal;
    font-style: normal;
}


@font-face {
    font-family: 'century_schoolbook_proitalic';
    src: url('../fonts/monotype__-_centuryschoolbookpro-italic-webfont.eot');
    src: url('../fonts/monotype__-_centuryschoolbookpro-italic-webfont.eot?#iefix') format('embedded-opentype'),
         url('../fonts/monotype__-_centuryschoolbookpro-italic-webfont.woff') format('woff'),
         url('../fonts/monotype__-_centuryschoolbookpro-italic-webfont.ttf') format('truetype'),
         url('../fonts/monotype__-_centuryschoolbookpro-italic-webfont.svg#century_schoolbook_proitalic') format('svg');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'concertgebouw_iconfont';
    src:url('../fonts/concertgebouw.eot');
    src:url('../fonts/concertgebouw.eot?#iefix') format('embedded-opentype'),
        url('../fonts/concertgebouw.woff') format('woff'),
        url('../fonts/concertgebouw.ttf') format('truetype'),
        url('../fonts/concertgebouw.svg#concertgebouw') format('svg');
    font-weight: normal;
    font-style: normal;
}


$logoFontsize:			23px;
$navFontsize:			15px;
$h1Fontsize:			32px;
$h2Fontsize:			26px;
$h3Fontsize:			22px;
$h4Fontsize:			19px;
$h5Fontsize:			16px;

$pFontsize:				16px;
$qFontsize:				20px;

$listHeadingFontsize:	20px;
$listSubFontsize:		16px;
$blockPFontsize:		14px;
$listPFontsize:			14px;
$blockHeaderFontsize:	14px;
$breadcrumbFontsize:	14px;
$userPanelFontsize:		13px;
$checkboxFontsize:		13px;
$smallFontsize:			12px;






///////////////////////////////////////////////////////////////////////////////
//
//									Colors
//
///////////////////////////////////////////////////////////////////////////////

$colorPrime:			#32b498;			// Primary color, used for Links, buttons, highlight etc.
$colorNav:				#ff0000;			// navigation menu bg color
$colorContext:			#009ce7;			// context color
$colorSub:				#ff5600;			// extral link color

$colorYoutube:			#ff0000;
$colorFacebook:			#009ce7;
$colorTwitter:			#80cef3;

// grayscale colors
 $colorGrayScaleA:		#000;				// Headings color, some border color
 $colorGrayScaleB:		#282828;			// Block header bg color
 $colorGrayScaleBAlt: rgba(40, 40, 40, .9);	// footer bg color
 $colorGrayScaleC:		#333;				// Paragraph text color
 $colorGrayScaleD:		#666;
 $colorGrayScaleE:		#999;				// Homepage block text color
 $colorGrayScaleF:		#ccc;				// Homepage block text color
 $colorGrayScaleG:		#fff;				// Homepage block text color





///////////////////////////////////////////////////////////////////////////////
//
//									Icons
//
///////////////////////////////////////////////////////////////////////////////

$iconSize: 20px;                            //icons have a base size at which they're pixel perfect (i.e. sharp)

//base icon properties according to icomoon
@mixin iconReset {
    font-family: 'concertgebouw_iconfont';
    font-weight: normal;
    font-style: normal;
    font-variant: normal;
    line-height: 1;
    speak: none;
    text-transform: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin iconSet($icon) {
    @if      $icon == soundoff          { content: "\e600"; }
    @else if $icon == sound             { content: "\e601"; }
    @else if $icon == youtube           { content: "\e602"; }
    @else if $icon == x20               { content: "\e603"; }
    @else if $icon == x14               { content: "\e604"; }
    @else if $icon == vimeo             { content: "\e605"; }
    @else if $icon == twitter           { content: "\e606"; }
    @else if $icon == tumblr            { content: "\e607"; }
    @else if $icon == spotify           { content: "\e608"; }
    @else if $icon == rss               { content: "\e609"; }
    @else if $icon == play              { content: "\e60a"; }
    @else if $icon == pdf               { content: "\e60b"; }
    @else if $icon == loupe             { content: "\e60c"; }
    @else if $icon == linkedin          { content: "\e60d"; }
    @else if $icon == heart             { content: "\e60e"; }
    @else if $icon == goto              { content: "\e60f"; }
    @else if $icon == facebook          { content: "\e610"; }
    @else if $icon == dot               { content: "\e611"; }
    @else if $icon == chevron20up       { content: "\e612"; }
    @else if $icon == chevron20right    { content: "\e613"; }
    @else if $icon == chevron20left     { content: "\e614"; }
    @else if $icon == chevron20down     { content: "\e615"; }
    @else if $icon == chevron14up       { content: "\e616"; }
    @else if $icon == chevron14right    { content: "\e617"; }
    @else if $icon == chevron14left     { content: "\e618"; }
    @else if $icon == chevron14down     { content: "\e619"; }
    @else if $icon == cart              { content: "\e61a"; }
    @else if $icon == circle            { content: "\e61b"; }
    @else if $icon == pdfbg             { content: "\e61c"; }
    @else if $icon == required          { content: "*"; }
    @else { content: "error" }
}

@mixin icon($icon, $size: 1, $color: inherit, $location: before) {
    @if $icon == pdf {
      position: relative;
      &:before,
      &:after { 
        @include iconReset;
        font-size: $size * $iconSize;
        position: absolute; top: 0; left: 0; // stack before and after on top of each other
      }
      &:before  { @include iconSet(pdfbg); color: #fff; }
      &:after   { @include iconSet($icon); color: $color; }
    } @else if $icon == youtube
          or $icon == vimeo
          or $icon == twitter
          or $icon == tumblr
          or $icon == spotify
          or $icon == linkedin
          or $icon == facebook {
      position: relative;
      &:before,
      &:after { 
        @include iconReset;
        font-size: $size * $iconSize;
        position: absolute; top: 0; left: 0; // stack before and after on top of each other
      }
      &:before  { @include iconSet(circle); color: #fff; }
      &:after   { @include iconSet($icon); color: $color; }
    } @else if $location == before {
        &:before {
            @include iconReset;
            @include iconSet($icon);
            font-size: $size * $iconSize;
            color: $color;
        }
    } @else if $location == after {
        &:after {
            @include iconReset;
            @include iconSet($icon);
            font-size: $size * $iconSize;
            color: $color;
        }
    }
}





///////////////////////////////////////////////////////////////////////////////
//
//									Helpers
//
///////////////////////////////////////////////////////////////////////////////

@mixin transition($what: all, $duration: .2s, $easing: ease, $delay: 0) {
	-webkit-transition: $what $duration $easing $delay;
	   -moz-transition: $what $duration $easing $delay;
	    -ms-transition: $what $duration $easing $delay;
	     -o-transition: $what $duration $easing $delay;
	        transition: $what $duration $easing $delay;
}

@mixin globalShadow($option: default) {
	@if $option == reset {
	-webkit-box-shadow: none;
	   -moz-box-shadow: none;
	        box-shadow: none;
	} @else {
	-webkit-box-shadow: 0px 1px 3px 0px rgba(0,0,0,0.2);
	   -moz-box-shadow: 0px 1px 3px 0px rgba(0,0,0,0.2);
	        box-shadow: 0px 1px 3px 0px rgba(0,0,0,0.2);
	}
}

@mixin globalTextShadow 								{ text-shadow: 0 0 6px rgba(0,0,0,.2); }
@mixin ellipsis 										{ display: block; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
@mixin textReplace 										{ display: block; text-indent: -9999px; overflow: hidden; }
@mixin visuallyHidden									{ border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; }
@mixin clearfix {
	&:before,
	&:after { content: " "; display: table; }
	&:after { clear: both; }
}

@mixin textSelectionColor ($color: #ade1d6) {
	&::selection { background: $color; }
	&::-moz-selection { background: $color; }
}

@mixin button ($bgColor: $colorPrime, $txtColor: $colorGrayScaleG, $txtSize: $smallFontsize, $padding: .4em) {
	font-size: $txtSize;
	display: inline-block;
	color: $txtColor;
	background-color: $bgColor;
	padding: $padding;
}




